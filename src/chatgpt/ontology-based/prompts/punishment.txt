
In this task, you need to generate triples based on an ontology. There are constraints on how you can generate the hypotheses.

[ONTOLOGY]
```
(cdo:PunishmentTreatment, rdfs:subClassOf, cdo:PunishmentVariable)
(cdo:PunishmentDistributionRule, rdfs:subClassOf, cdo:PunishmentVariable)
(cdo:PunishmentRule, rdfs:subClassOf, cdo:PunishmentVariable)
(cdo:PunishmentSequential, rdfs:subClassOf, cdo:PunishmentVariable)
(cdo:PunishmentAgent, rdfs:subClassOf, cdo:PunishmentVariable)
(cdo:PunishmentIncentive, rdfs:subClassOf, cdo:PunishmentVariable)
(cdo:outcome-based, rdf:type, cdo:PunishmentRule)
(cdo:sequential_leadership-by-example, rdf:type, cdo:PunishmentSequential)
(cdo:institution, rdf:type, cdo:PunishmentAgent)
(cdo:deductive, rdf:type, cdo:PunishmentDistributionRule)
(cdo:monetary, rdf:type, cdo:PunishmentIncentive)
(cdo:non-monetary_material, rdf:type, cdo:PunishmentIncentive)
(cdo:leader, rdf:type, cdo:PunishmentAgent)
(cdo:-1, rdf:type, cdo:PunishmentTreatment)
(cdo:peer, rdf:type, cdo:PunishmentAgent)
(cdo:none, rdf:type, cdo:PunishmentRule)
(cdo:other, rdf:type, cdo:PunishmentAgent)
(cdo:redistributive, rdf:type, cdo:PunishmentDistributionRule)
(cdo:experimenter, rdf:type, cdo:PunishmentAgent)
(cdo:simultaneous, rdf:type, cdo:PunishmentSequential)
(cdo:network, rdf:type, cdo:PunishmentAgent)
(cdo:non-monetary_social, rdf:type, cdo:PunishmentIncentive)
(cdo:sequential_turn-taking, rdf:type, cdo:PunishmentSequential)
(cdo:contribution-based, rdf:type, cdo:PunishmentRule)
(cdo:computer, rdf:type, cdo:PunishmentAgent)
(cdo:random, rdf:type, cdo:PunishmentRule)
(cdo:1, rdf:type, cdo:PunishmentTreatment)
(cdo:rank-based, rdf:type, cdo:PunishmentRule)
(cdo:third_party, rdf:type, cdo:PunishmentAgent)
(cdo:0, rdf:type, cdo:PunishmentTreatment)
(cdo:hypothetical, rdf:type, cdo:PunishmentIncentive)
(cdo:other, rdf:type, cdo:PunishmentRule)
```

[TASK]
You need to generate the most sensible and coherent hypotheses in the form:
```
Cooperation is significantly <higher OR lower> when `SIV1` is `SIVV1`, compared to when `SIV2` is `SIVV2`.
```

[CONSTRAINTS]
1 - SIV1 and SIV2 must be SIV from the ontology, and SIVV1 and SIVV2 SIVV from the ontology. Entities of type  `SIV` are subjects of triples from the ontology with predicate `rdfs:subClassOf`.  Entities of type `SIVV` are subjects of triples from the ontology with predicate `rdf:type`.
2 - The hypothesis must be sensible and coherent.
3 - When generating the hypothesis, keep the bracket and the original names in the ontology.

Can you generate up to 5 sensible and coherent hypotheses?  You need to respect constraint 1 AND 2 AND 3.
